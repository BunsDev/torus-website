version: 2
job_common_node: &job_common_node
  docker:
    - image: cimg/node:lts
  working_directory: ~/torus-website
job_common_base: &job_common_base
  docker:
    - image: skyuppercut/buildpack-deps
  working_directory: ~/torus-website
job_common: &job_common
  docker:
    - image: skyuppercut/node-puppeteer
  working_directory: ~/torus-website
step_save_cache: &step_save_cache
  save_cache:
    key: dependency-cache-{{ checksum "package-lock.json" }}
    paths:
      - node_modules
step_restore_cache: &step_restore_cache
  restore_cache:
    key: dependency-cache-{{ checksum "package-lock.json" }}
step_setup_global_packages: &step_setup_global_packages
  run:
    name: 'Set up global packages'
    command: |
      [ ! -d "node_modules" ] && npm ci || echo "node_modules exist"
update_lambda_job: &update_lambda_job
  <<: *job_common
  steps:
    - attach_workspace:
        at: ~/
    - add_ssh_keys
    - run:
        name: 'Update lambda version'
        command: |
          mkdir -p ~/.ssh 
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          . ./scripts/updateLambda.sh
update_iframeIntegrity: &update_iframeIntegrity
  <<: *job_common_node
  steps:
    - attach_workspace:
        at: ~/
    - add_ssh_keys
    - run:
        name: 'Update iframe integrity'
        command: |
          mkdir -p ~/.ssh
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          . ./scripts/updateIframeIntegrity.sh
deploy_function: &deploy_function
  <<: *job_common
  steps:
    - attach_workspace:
        at: ~/
    - add_ssh_keys
    - run:
        name: 'Upload source to Sentry'
        command: |
          . ./scripts/uploadToSentry.sh
    - run:
        name: 'Delete sourcemaps'
        command: rm ./dist/js/*.js.map
    - run:
        name: 'Deploy Over SSH to AWS'
        command: |
          . ./scripts/uploadToAws.sh
jobs:
  deploy:
    <<: *deploy_function
  deploy-binance:
    <<: *deploy_function
  update-lambda:
    <<: *update_lambda_job
  update-lambda-binance:
    <<: *update_lambda_job
  update-iframeIntegrity:
    <<: *update_iframeIntegrity
  update-iframeIntegrity-binance:
    <<: *update_iframeIntegrity

workflows:
  version: 2
  commit:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - deploy:
          context: AWS
          requires:
            - build
            - test-coverage
          filters:
            branches:
              only:
                - master
      - update-lambda:
          context: AWS
          requires:
            - deploy
          filters:
            branches:
              only:
                - master
      - update-iframeIntegrity:
          context: AWS
          requires:
            - deploy
          filters:
            branches:
              only:
                - master
      - build-binance:
          filters:
            branches:
              only:
                - binance
      - deploy-binance:
          context: AWS
          requires:
            - build-binance
            - test-coverage
          filters:
            branches:
              only:
                - binance
      - update-lambda-binance:
          context: AWS
          requires:
            - deploy-binance
          filters:
            branches:
              only:
                - binance
      - update-iframeIntegrity-binance:
          context: AWS
          requires:
            - deploy-binance
          filters:
            branches:
              only:
                - binance
